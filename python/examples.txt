pyrepl 'for x in [1,2,3] { print(x); if x == 2 { print(x) }} print(x)'
pyrepl 'print("hello %s" % "you")'
pyrepl -Isys 'file=open(sys.argv[1]); for line in file { print(line.rstrip()) }' wd
pyrepl -Ijson,sys 'file=open(sys.argv[1]); data=json.load(file); print(json.dumps(data, indent=2))' avril_videos3.txt
pyrepl 'for i in iter([1,2,3,4,5]) {print(i)}'
pyrepl 'print([x for x in range(1,6)])'
pyrepl 'func=lambda x: x*x; print(func(3))'
pyrepl 'func=lambda x,y: x+y; print(func(3,5))'
pyrepl 'sum=lambda x,y: x+y; print(sum(3,5))'
pyrepl 'square=lambda x: x*x; print(square(3))'
pyrepl 'max=lambda x,y: x if x > y else y; print(max(10,5))'
pyrepl 'def reduce(list){a=list[0]; for i in range(1,len(list)) {a= a + list[i]} return a }; print(reduce([1,2,3,4,5]))'
pyrepl 'def reduce(list){a=list[0]; for i in range(1,len(list)) {a= a + list[i]} return a } print(reduce([1,2,3,4,5]))'
pyrepl 'def reduce(func, list){a=list[0]; for i in range(1,len(list)) {a= func(a, list[i])} return a } def inc(x){return x+1} print(list(map(inc,[1,2,3,4,5])))'
pyrepl 'def reduce(func, list){a=list[0]; for i in range(1,len(list)) {a= func(a, list[i])} return a } def add(x,y){return x+y} print(reduce(add,[1,2,3,4,5]))'
pyrepl 'print("hello %s %s" % ("you", "too"))'
pyrepl --debug 'print("hello %s %s" % ("you", "too"))'
pyrepl --debug -Isys,re 'print("hello %s %s" % ("you", "too"))'
pyrepl 'if 0.1+0.2==0.3 {print("true")}else {print("false")}'
pyrepl 'x=zip([1,2,3],[4,5,6]); print(set(x))'
pyrepl 'x=zip([1,2,3],[4,5,6]); print(set(x))'
pyrepl 'x=zip([1,2,3],[4,5,6]); print(list(set(x))[0])'
pyrepl -Inltk 'nltk.download('\''punkt'\'')'
pyrepl -Inltk 'print(nltk.corpus.stopwords.words("french"))'
pyrepl -Inltk 'nltk.download('\''stopwords'\'')'
pyrepl -Inltk 'print(nltk.corpus.stopwords.words("french"))'
pyrepl -Inltk 'wn=nltk.WordNetLemmatizer();'
pyrepl -Ire 'print(re.sub("t","","text"))'
pyrepl -Ire 'print(re.sub("t","","text",count=1))'
pyrepl -Ire 'print(re.sub("t","","text",count=2))'
pyrepl -Ire 'print(re.sub("t","","text",count=3))'
pyrepl 'word="text"; print(word[0:-1])'
pyrepl 'word="text"; print(word[:-1])'
pyrepl -Ire 'print(re.split(" ", "one    two three"))'
pyrepl -Ire 'print(re.split("\s+", "one    two three"))'
pyrepl -Ire 'print(re.split("\s+", "one    two three"))'
pyrepl -Ire 'print(re.split(" ", "one    two three"))'
pyrepl -Ire 'print(re.split("\s+", "one    two three"))'
pyrepl 'for i in [1,2,3,4,5] {print(i)}'
pyrepl 'var=4; for i in [1,2,3,4,5] { if var == i { print("found var in list") } }'
pyrepl 'var=4; for i in [1,2,3,4,5] { if var == i { print(f"found {var} in list") } }'
pyrepl -Ire,sys 'for word in re.split("\s+", open(sys.argv[1]).read()) { print(word) }' wd
pyrepl -Iantigravity ''
pyrepl 'import antigravity'
pyrepl 'from __future__ import braces'
pyrepl 'var=5; print("this is {{}} text".format())'
pyrepl 'var=5; print("this is {{ text".format())'
pyrepl -Imatplotlib ''
pyrepl -Imatplotlib.image ''
pyrepl -Imatplotlib.pyplot ''
cat wd | pyrepl -Isys -e 'print(sys.stdin.read(),end="")'
cat wd | pyrepl -Isys -e 'print(sys.stdin.readline(),end="")'
cat wd | pyrepl -Isys -e 'print(sys.stdin.readlines(),end="")'
cat wd | pyrepl -Isys -e 'for l in list(sys.stdin.readlines()) { print(l,end="") }'
pyrepl -Isys -e 'print(type("text"))'
pyrepl -Isys -e 'print(type(sys))'
pyrepl -Isys -e 'var=5; print(type(var))'
pyrepl -Isys -e 'var="5"; print(type(var))'
pyrepl -e 'print("text"[0])'
pyrepl -e 'print("text"[1:])'
pyrepl -e 'print("text"[1:-1])'
pyrepl -e 'print("text"[:-1])'
pyrepl -e 'print("abcdefghi"[:-1:2])'
pyrepl -e 'print("abcdefghi"[:])'
pyrepl -e 'print(["one","two","three","four"][:])'
pyrepl -e 'print(["one","two","three","four"][1:-1])'
pyrepl -e 'print(["one","two","three","four","five","six","seven","eight"][1:-1:2])'
pyrepl -e 'print(["one","two","three","four","five","six","seven","eight"][0::2])'
pyrepl -e 'print(["one","two","three","four","five","six","seven","eight"][1::2])'
pyrepl -e 'print(ord("a"))'
pyrepl -e 'print(list(map(ord,["a","e"])))'
pyrepl -Isys,os -e 'print(os.path.exists(sys.argv[1]))' wd
pyrepl -Isys,os -e 'print(os.path.isfile(sys.argv[1]))' wd
pyrepl -Isys,os -e 'print(os.path.isdir(sys.argv[1]))' wd
pyrepl -Isys,os -e 'print(os.path.isdir(sys.argv[1]))' perl
pyrepl -e 'array=["one","two","three"]; print(array); array.insert(0,""); print(array)'
pyrepl -e 'for x,y in zip([1,2,3,4,5],[6,7,8,9,10]) { print(f"{x} {y}") }'
pyrepl -e 'print(type([1,2,3]))'
pyrepl -Imatplotlib -e ''
pyrepl -Imatplotlib -e ''
pyrepl -Imatplotlib.pyplot -e ''
pyrepl -e 'array=list(range(10)); print(array[2],array[4])'
pyrepl -e 'var="abcdefghijkl"; print(var[2:])'
pyrepl -e 'var="abcdefghijkl"; print(var[:2])'
pyrepl -e 'var="abcdefghijkl"; print(var[:2]+var[2:])'
pyrepl -e 'a,b=5,6; print(a,b)'
pyrepl -e 'def myfunc(){return 5,6} a,b=myfunc(); print(a,b)'
pyrepl -e 'def myfunc(){return (5,6)} a,b=myfunc(); print(a,b)'
pyrepl -e 'def myfunc(){return [5,6]} a,b=myfunc(); print(a)'
pyrepl -e 'def myfunc(){return (5,6)} a,b=myfunc(); print(a)'
pyrepl -e 'def myfunc(){return (5,6)} a,b=myfunc(); print(a,b)'
pyrepl -e 'def myfunc(){return [5,6]} a,b=myfunc(); print(a,b)'
pyrepl -e 'def myfunc(){return [5,6]} a=myfunc(); print(a)'
pyrepl -e 'def myfunc(){return [5,6]} a,b=myfunc(); print(a)'
pyrepl -e 'def myfunc(){return 5,6} a=myfunc(); print(a)'
pyrepl -e 'def myfunc(){return 5,6} a,b=myfunc(); print(a)'
pyrepl -e 'def myfunc(){return (5,6)} a=myfunc(); print(a)'
pyrepl -e 'def myfunc(){return (5,6)} a,b=myfunc(); print(a)'
pyrepl -e 'def myfunc(){return 5,6,7} a=myfunc(); print(a)'
pyrepl -e 'a,b=1,2; print(a); print(b)'
pyrepl -e 'a=1,2; print(a)'
pyrepl -e 'a,b,c=1,2,3; print(a)'
pyrepl -e 'a=1,2,3; print(a)'
pyrepl -e 'a,b,c=[1,2,3]; print(a)'
pyrepl -e 'a,b,c=[1,2,3],4,5; print(a)'
pyrepl -e 'x=[i**2 for i in range(20)]; print(x)'
pyrepl -e 'x=(i**2 for i in range(20)); print(x)'
pyrepl -e 'list=[1,2,3,4,5]; print(dir(list))'
pyrepl -e 'list=[1,2,3,4,5]; print(dir(4))'
pyrepl -e 'list=[1,2,3,4,5]; for i in dir(4) {print(i)}'
pyrepl -e 'dict={"key":"value"}; dict.clear; print(dict.__str__())'
pyrepl -e 'class person { def __init__(self,name){self.name=name} def __repr__(self){return "<other repr>"} } p = person("tim"); print(p)'
pyrepl -e 'dict={"key":"value"}; dict.clear; print(dict.__getitem__("key"))'
pyrepl -e 'print("\033[0;32mtext\033[0m")'
pyrepl -e 'GREEN="\033[0;32m"; RESET="\033[0m"; print(f"{GREEN}text{RESET} after")'
pyrepl -e 'GREEN="\033[0;32m"; RESET="\033[0m"; print(GREEN + "text" + RESET + " after")'
pyrepl -e 'obj={"atoms":["C", "H", "H", "H"]}; print(obj["atoms"])'
pyrepl -e 'mol={1: {"atom": "C"}, 2: {"atom": "H"}, 3: {"atom": "H"}, 4: {"atom": "H"}, 5: {"atom": "H"}}; print(mol); print({node:mol[node] for node in mol})'
pyrepl -e 'print(str([list(iter(range(5)))]))'
pyrepl -e 'x="".join([1,2,3,4]); print(x)'
pyrepl -e 'x="".join(list([1,2,3,4])); print(x)'
pyrepl -e 'x=" ".join([str(i) for i in [1,2,3,4]]); print(x)'
pyrepl -e 'x=" ".join([str(i) for i in ["1",2,3,4]]); print(x)'
pyrepl -e 'x=" ".join([i for i in ["1",2,"3","4"]]); print(x)'
pyrepl -e 'x=" ".join([str(i) for i in ["1","2","3","4"]]); print(x)'
pyrepl -e 'x=" ".join([i for i in ["1","2","3","4"]]); print(x)'
pyrepl -e 'x=" ".join([i for i in ["1","2","3","4"]]); print(x)'
pyrepl -Ire -e 'if(re.match("^t", "text")) {print("true")} else {print("false")}'
pyrepl -Isys -e 'sys.exit("error")'
pyrepl -e 'array=list(range(5)); try {print(array[5])} except IndexError { print(array[4])}'
pyrepl -e 'raise SysError'
pyrepl -Isys -e 'file=open(sys.argv[1], "r"); print(file.read())' wd
pyrepl -e 'var=bytes("Hello world", "ascii"); print(var)'
pyrepl -e 'var=bytes("Hello world", "UTF-8"); print(var)'
pyrepl -e 'var="Hello world".encode("ascii"); print(var)'
pyrepl -Isys -e 'file=open(sys.argv[1], "r"); print(file.read().encode("ascii"))' wd
pyrepl -Ios -e 'os.system("ls")'
pyrepl -Isys -e 'sys.stdout.write(sys.stdin.readline().strip().upper() + "rn")'
pyrepl -e 'x=zip(zip([1,2,3],[4,5,6]),[7,8,9]); print(list(x))'
pyrepl -Izlib,sys -e 'if (len(sys.argv) < 3) { exit() } input=sys.argv[1]; output=sys.argv[2]; '
pyrepl -Izlib,sys -e 'if (len(sys.argv) < 3) { exit() } input=sys.argv[1]; output=sys.argv[2]; file_read = open(input,"rb"); buffer = file_read.read(); decomp = zlib.decompress(buffer); file_write = open(output,"w"); file_write.write(decomp); ' stream_stripped.bin out.bin 
pyrepl -Izlib,sys -e 'if (len(sys.argv) < 3) { exit() } input=sys.argv[1]; output=sys.argv[2]; file_read = open(input,"rb"); buffer = file_read.read(); decomp = zlib.decompress(buffer); file_write = open(output,"w"); file_write.write(decomp); ' stream.bin out.bin 
pyrepl -e 'var=bytes("Hello world", "ascii"); print(var); print(type(var))'
pyrepl -e 'var=bytes("Hello world", "ascii"); print(var); print(type(var)); print(var.decode("ascii"))'
pyrepl -e 'print(__name__)'
pyrepl -Izlib,sys -e 'if (len(sys.argv) < 3) { exit() } input=sys.argv[1]; output=sys.argv[2]; file_read = open(input,"rb"); buffer = file_read.read(); decomp = zlib.decompress(buffer); file_write = open(output,"wb"); file_write.write(decomp); ' image.bin output.bin 
pyrepl -Isys -Iolefile --debug -e ''
pyrepl -Isys -Iolefile --debug -e ''
pyrepl -e 'def slurp(*arg) { for i in arg { print(i) }}; slurp(1, 2, 3, 4, 5)'
pyrepl -e 'def slurp(*arg) { for i in arg { print(i) }}; slurp([1, 2, 3, 4, 5])'
pyrepl -e 'def slurp(*arg) { for i in arg { print(i) }}; slurp([1, 2, 3, 4, 5], [7,8,9])'
pyrepl -e 'def slurp(arg) { for i in arg { print(i) }}; slurp([1, 2, 3, 4, 5], [7,8,9])'
